package com.sasha.adorufu.module.modules;

import com.sasha.adorufu.events.ServerGenerateChunkEvent;
import com.sasha.eventsys.SimpleEventHandler;
import com.sasha.eventsys.SimpleListener;
import com.sasha.adorufu.AdorufuMod;
import com.sasha.adorufu.events.ClientPacketRecieveEvent;
import com.sasha.adorufu.module.ModuleInfo;
import com.sasha.adorufu.module.AdorufuCategory;
import com.sasha.adorufu.module.AdorufuModule;
import net.minecraft.network.play.server.SPacketChunkData;
import net.minecraft.network.play.server.SPacketSpawnObject;

import java.util.LinkedHashMap;
import java.util.Map;

import static com.sasha.adorufu.misc.AdorufuRender.chunkESP;

/**
 * Created by Sasha on 11/08/2018 at 8:34 PM
 **/
@ModuleInfo(description = "Highlights chunks that have never been generated by the server. Useful for base hunting.")
public class ModuleChunkTrace extends AdorufuModule implements SimpleListener {

    public static LinkedHashMap<Integer, Integer> newChunks = new LinkedHashMap<>();

    public ModuleChunkTrace() {
        super("ChunkTrace", AdorufuCategory.RENDER, false, true);
        this.addOption("ChunkESP", true);
        this.addOption("PearlNotify", false);
    }

    @Override
    public void onEnable() {

    }

    @Override
    public void onDisable() {

    }

    @Override
    public void onTick() {
        LinkedHashMap<String, Boolean> suffixMap = new LinkedHashMap<>();
        suffixMap.put("Chunks", this.getOption("ChunkESP"));
        suffixMap.put("Pearls", this.getOption("PearlNotify"));
        this.setSuffix(suffixMap);
    }
    @Override
    public void onRender() {
        if (this.isEnabled() && this.getOption("ChunkESP")){
            newChunks.forEach((chunkX, chunkZ) -> {
                int x, z;
                x = chunkX * 16;
                z = chunkZ * 16;
                double maxY = AdorufuMod.minecraft.player.posY + 25;
                int y = 0;
                chunkESP(x, y, z, 1.0f, 0.0f, 0.0f, 0.5f, maxY);
            });
        }
    }
    @SimpleEventHandler
    public void onPacketRecieve(ClientPacketRecieveEvent e ){
        if (!this.isEnabled()) return;
        if (e.getRecievedPacket() instanceof SPacketSpawnObject){
            SPacketSpawnObject pck = (SPacketSpawnObject) e.getRecievedPacket();
            if (pck.getEntityID() != 65 || !this.getOption("PearlNotify")) {
                return;
            }
            AdorufuMod.logMsg(false, "\2478(\247bChunkTrace\2478) \2477Ender pearl loaded @ XYZ *x *y *z".replace("*x", pck.getX()+"")
            .replace("*y", pck.getY()+"").replace("*z", pck.getZ()+""));
        }
    }
    @SimpleEventHandler
    public void onNewChunk(ServerGenerateChunkEvent e) {
        if (!this.isEnabled()) return;
        if (newChunks.containsKey(e.getChunkX()) && newChunks.containsValue(e.getChunkZ())){
            return;
        }
        newChunks.put(e.getChunkX(), e.getChunkZ());
        AdorufuMod.logMsg(e.getChunkX() + " " + e.getChunkZ());
    }
}
