package com.sasha.xdolf.module.modules;

import com.sasha.eventsys.SimpleEventHandler;
import com.sasha.eventsys.SimpleListener;
import com.sasha.xdolf.XdolfMod;
import com.sasha.xdolf.events.ClientPacketRecieveEvent;
import com.sasha.xdolf.module.ModuleInfo;
import com.sasha.xdolf.module.XdolfCategory;
import com.sasha.xdolf.module.XdolfModule;
import net.minecraft.network.play.server.SPacketChunkData;
import net.minecraft.network.play.server.SPacketSpawnObject;
import net.minecraft.world.chunk.Chunk;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;

import static com.sasha.xdolf.misc.XdolfRender.chunkESP;

/**
 * Created by Sasha on 11/08/2018 at 8:34 PM
 **/
@ModuleInfo(description = "Highlights chunks that have never been generated by the server. Useful for base hunting.")
public class ModuleChunkTrace extends XdolfModule implements SimpleListener {

    public static LinkedHashMap<Integer, Integer> newChunks = new LinkedHashMap<>();

    public static boolean chunkESP = false;
    public static boolean pearlNotify = false;

    public ModuleChunkTrace() {
        super("ChunkTrace", XdolfCategory.RENDER, false);
    }

    @Override
    public void onEnable() {

    }

    @Override
    public void onDisable() {

    }

    @Override
    public void onTick() {
        LinkedHashMap<String, Boolean> suffixMap = new LinkedHashMap<>();
        suffixMap.put("Chunks", chunkESP);
        suffixMap.put("Pearls", pearlNotify);
        this.setSuffix(suffixMap);
        if (this.isEnabled() && chunkESP){
            for (Map.Entry<Integer, Integer> chunk : newChunks.entrySet()) {
                int x, z;
                x = chunk.getKey()*16;
                double maxY = XdolfMod.minecraft.player.posY + 25;
                int y = 0;
                z = chunk.getValue()* 16;
                chunkESP(x, y, z, 1.0f, 0.0f, 0.0f, 0.5f, maxY);
            }
        }
    }
    @SimpleEventHandler
    public void onPacketRecieve(ClientPacketRecieveEvent e ){
        if (!this.isEnabled()) return;
        if (e.getRecievedPacket() instanceof SPacketSpawnObject){
            SPacketSpawnObject pck = (SPacketSpawnObject) e.getRecievedPacket();
            XdolfMod.logMsg(false, "\2478(\247bChunkTrace\2478) \2477Ender pearl loaded @ XYZ *x *y *z".replace("*x", pck.getX()+"")
            .replace("*y", pck.getY()+"").replace("*z", pck.getZ()+""));
        }
        if (e.getRecievedPacket() instanceof SPacketChunkData){
            SPacketChunkData pck = (SPacketChunkData) e.getRecievedPacket();
            if (!pck.isFullChunk() && (!(newChunks.containsKey(pck.getChunkX())) && newChunks.containsValue(pck.getChunkZ()))){
                newChunks.put(pck.getChunkX(), pck.getChunkZ());
            }
        }
    }
}
